trigger:
- master

stages:
  - stage: Developer
    jobs:
    - job:
      strategy:
        matrix:
          Docker-Python35:
            python.version.major: '3'
            python.version.minor: '5'
          Docker-Python36:
            python.version.major: '3'
            python.version.minor: '6'
          Docker-Python37:
            python.version.major: '3'
            python.version.minor: '7'
      variables:
      - name: DOCKER_PYTHON_VERSION
        value: '$(python.version.major).$(python.version.minor)'
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - script: |
          docker build --target=build --build-arg PYTHON_VERSION="${DOCKER_PYTHON_VERSION}" -t "putput-py${DOCKER_PYTHON_VERSION}" .
          docker build --build-arg PYTHON_VERSION="${DOCKER_PYTHON_VERSION}" .
          export CODE_COV=`bash <(curl -s https://codecov.io/env)`
          docker run $CODE_COV "putput-py${DOCKER_PYTHON_VERSION}"
  - stage: User
    jobs:
    - job:
      strategy:
        matrix:
          Windows-Python35:
            python.version.major: '3'
            python.version.minor: '5'
            os.image: 'windows-latest'
          Windows-Python36:
            python.version.major: '3'
            python.version.minor: '6'
            os.image: 'windows-latest'
          Windows-Python37:
            python.version.major: '3'
            python.version.minor: '7'
            os.image: 'windows-latest'
          MacOS-Python35:
            python.version.major: '3'
            python.version.minor: '5'
            os.image: 'macOS-latest'
          MacOS-Python36:
            python.version.major: '3'
            python.version.minor: '6'
            os.image: 'macOS-latest'
          MacOS-Python37:
            python.version.major: '3'
            python.version.minor: '7'
            os.image: 'macOS-latest'
          Ubuntu-Python35:
            python.version.major: '3'
            python.version.minor: '5'
            os.image: 'ubuntu-latest'
          Ubuntu-Python36:
            python.version.major: '3'
            python.version.minor: '6'
            os.image: 'ubuntu-latest'
          Ubuntu-Python37:
            python.version.major: '3'
            python.version.minor: '7'
            os.image: 'ubuntu-latest'
      pool:
        vmImage: $(os.image)
      steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version.major).$(python.version.minor)'
        displayName: 'Use Python $(python.version.major).$(python.version.minor)'
      - script: python -m pip install --upgrade pip setuptools wheel
        displayName: 'Upgrade pip and setuptools'
      - script: pip install .
        displayName: 'Install putput'
